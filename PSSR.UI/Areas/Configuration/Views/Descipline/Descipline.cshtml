@model PSSR.ServiceLayer.DesciplineServices.DesciplineListCombinedDto
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Desciplines";
}

    <div class="row">
        <div class="col-md-4">
            <div class="box box-warning">
                <div class="box-header with-border">
                    <h3 class="box-title">Descipline</h3>
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <partial name="_ValidationSummary" />
                    <form role="form" asp-action="CreateDescipline" asp-controller="Descipline">
                        <!-- text input -->
                        <div class="form-group">
                            <label class="control-label required">Title</label>
                            <input name="Name" type="text" class="form-control" placeholder="Enter ..." required>
                        </div>
                        <!-- textarea -->
                        <div class="form-group">
                            <label>Description</label>
                            <textarea name="Description" class="form-control" rows="3" placeholder="Enter ..."></textarea>
                        </div>

                        <div class="box-footer">
                            <button type="submit" class="btn btn-warning pull-right">Create</button>
                        </div>
                    </form>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
        <div class="col-md-8">
            <div class="box box-success">
                <div class="option-filter">
                    <form id="sort-filter-form" class="form-horizontal">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <div class="col-sm-3">
                                    <label class="control-label">Sort By</label>
                                    <select asp-for="SortFilterPageData.OrderByOptions" name="OrderByOptions"
                                            asp-items="Html.GetEnumSelectList<PSSR.ServiceLayer.DesciplineServices.QueryObjects.OrderByOptions>()"
                                            class="form-control sort-filter-width"
                                            onchange="BookList.sendForm(this)"></select>
                                </div>
                                <div class="col-sm-2">
                                    <label class="control-label">Filter Type</label>
                                    <select asp-for="SortFilterPageData.FilterBy" name="FilterBy"
                                            asp-items="Html.GetEnumSelectList<PSSR.ServiceLayer.DesciplineServices.QueryObjects.DesiplineFilterBy>()"
                                            class="form-control sort-filter-width"
                                            onchange="BookList.filterByHasChanged(this)"></select>
                                </div>
                                <div class="col-sm-3 dim-filter-value" id="filter-value-group">
                                    <label class="control-label">Filter By</label>
                                    <select asp-for="SortFilterPageData.FilterValue" name="FilterValue"
                                            id="filter-value-dropdown"
                                            class="form-control sort-filter-width"
                                            disabled
                                            onchange="BookList.sendForm(this)">
                                        <option>Select filter type...</option>
                                    </select>
                                </div>

                                <div class="col-sm-2">
                                    <label class="control-label">Page</label>
                                    <div>
                                        <input asp-for="SortFilterPageData.PageNum" name="PageNum"
                                               class="form-control page-control-width page-num-input"
                                               onchange="BookList.sendForm(this)">
                                        <span class="num-pages-text">of @Model.SortFilterPageData.NumPages</span>
                                    </div>
                                </div>
                                <div class="col-sm-2">
                                    <label class="control-label">Page&nbsp;Size</label>
                                    <select asp-for="SortFilterPageData.PageSize" name="PageSize"
                                            asp-items="Model.SortFilterPageData.PageSizes.Select(x => new SelectListItem {Text = x.ToString(), Value = x.ToString()})"
                                            class="form-control page-control-width"
                                            onchange="BookList.sendForm(this)"></select>
                                </div>
                            </div>
                        </div>
                        <input id="PrevCheckState" name="PrevCheckState" type="hidden" value=@Model.SortFilterPageData.PrevCheckState>
                        @*@Html.Hidden("PrevCheckState", @Model.SortFilterPageData.PrevCheckState) -- this didn't work for some reason*@
                    </form>
                    <br />
                </div>

                <div>
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="box">
                                <div class="box-header">
                                    <h3 class="box-title">Descipline List</h3>
                                    <div class="box-tools">
                                        <form method="get">
                                            <div class="input-group input-group-sm pull-left" style="padding-right:10px">

                                                <input name="PrevCheckState" type="hidden" value=@Model.SortFilterPageData.PrevCheckState>
                                                <input asp-for="SortFilterPageData.OrderByOptions" name="OrderByOptions" type="hidden">
                                                <input asp-for="SortFilterPageData.FilterBy" name="OrderByOptions" type="hidden">
                                                <input asp-for="SortFilterPageData.FilterValue" name="OrderByOptions" type="hidden">
                                                <input asp-for="SortFilterPageData.PageNum" name="PageNum" type="hidden">
                                                <input asp-for="SortFilterPageData.PageSize" name="PageSize" type="hidden">
                                                <div class="input-group input-group-sm pull-right" style="width: 150px;">
                                                    <input type="text" name="QueryFilter" asp-for="SortFilterPageData.QueryFilter" class="form-control pull-right" placeholder="Search">
                                                    <div class="input-group-btn">
                                                        <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                                                    </div>

                                                </div>
                                            </div>
                                        </form>

                                    </div>
                                </div>
                                <!-- /.box-header -->
                                <div class="box-body table-responsive no-padding">
                                    <table class="table fixedHeadertable table-hover">
                                        <thead>
                                            <tr>
                                                <th>Title</th>
                                                <th>Create Date</th>
                                                <th>Description</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="hightable-containter">
                                            @foreach (var item in Model.DesciplineList)
                                            {
                                                <tr id="tr-@item.Id">
                                                    <td id="td1-@item.Id">@item.Title</td>
                                                    <td>@item.CreatedDate.ToString("dddd, dd MMMM yyyy")</td>
                                                    <td id="td2-@item.Id">@item.Description</td>
                                                    <td><button type="button" class="btn btn-success btn-sm edtit-btn" id="dec-@item.Id" data-toggle="modal" data-target="#modal-default"><i class="fa fa-edit"></i></button></td>

                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                                <!-- /.box-body -->
                            </div>
                            <!-- /.box -->
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="modal fade" id="modal-default">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4 class="modal-title">Edit Descipline</h4>
            </div>
            <div class="modal-body">
                <div>
                    <input type="hidden" id="selected-desipline-id"/>
                    <div class="form-group">
                        <label>Title</label>
                        <input id="Name1" type="text" class="form-control" placeholder="Enter ..." required>
                    </div>
                    <!-- textarea -->
                    <div class="form-group">
                        <label>Description</label>
                        <textarea id="Description1" class="form-control" rows="3" placeholder="Enter ..."></textarea>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="save-edit">Save changes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<script type='text/javascript'>
    $(document).ready(function () {

        $('.roadMap-btn').on('click', function () {
            var id = $(this).attr('id').split('-')[1];
            $('#roadMap-desipline-id').val(id);
            getroadMaps();
        });

        $('tr').dblclick(function () {
            var id = $(this).attr('id').split('-')[1];
            $('#modal-default').modal('show');
            showEditModel(id);
        })

        $('.edtit-btn').on('click', function () {
            var id = $(this).attr('id').split('-')[1];
            showEditModel(id);
        })

        $('#add-loacation').on('click', function () {
            var roadMapId = $('#lroadMapId').val();
            getLocations(roadMapId);
        });

        function getroadMaps() {
            let dropdwon = $('#lroadMapId');
            dropdwon.empty();
            dropdwon.append('<option selected="true" disabled>Choose Road Map</option>');
            dropdwon.prop('selectedIndex', 0);


            $.ajax({
                type: "Get",
                url: "/poec/RoadMap/GetRoadMaps",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data, status, jqXHR) {
                    $.each(data, function (i, val) {
                        dropdwon.append($("<option></option>").attr('value', val.id).text(val.name));
                    });

                },
                error: function (jqXHR, status) {
                    console.log(jqXHR);
                }
            });
        }

        function getLocations(roadMapId) {

            $.ajax({
                type: "Get",
                url: "/poec/RoadMap/GetLocationsByRoadMap?roadMapId=" + roadMapId + "",
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data, status, jqXHR) {
                    $.each(data, function (i, val) {
                        createTr(val);
                    });

                },
                error: function (jqXHR, status) {
                    console.log(jqXHR);
                }
            });
        }
        
        $('#save-edit').on('click', function () {
            var id = $('#selected-desipline-id').val();
            var name = $('#Name1').val();
            var desc = $('#Description1').val();
            
            var model = { 'id': id, 'name': name, 'description': desc };
            $.ajax({
                type: "Post",
                url: "/poec/Descipline/UpdateDescipline",
                data: JSON.stringify(model),
                contentType: 'application/json; charset=utf-8',
                dataType: "json",
                success: function (data, status, jqXHR) {
                    $("#td1-" + id).html(name);
                    $("#td2-" + id).html(desc);
                    $('#modal-default').modal('toggle');
                },
                error: function (jqXHR, status) {
                    console.log(jqXHR);
                }
            });
        });

        function showEditModel(id) {
            $.ajax({
                type: "Get",
                url: "/poec/Descipline/GetDescipline?id=" + id + "",
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data, status, jqXHR) {
                    $('#Name1').val(data.title);
                    $('#Description1').val(data.description);
                    $('#selected-desipline-id').val(data.id);
                },
                error: function (jqXHR, status) {
                    console.log(jqXHR);
                }
            });
        }

        var $TABLE = $('#table');
        var $BTN = $('#export-btn');
        var $EXPORT = $('#export');

        //$('.table-add').click(function () {
        //    var $clone = $TABLE.find('tr.hide').clone(true).removeClass('hide table-line');
        //    $TABLE.find('table').append($clone);
        //});

        $('.table-remove').click(function () {
            $(this).parents('tr').detach();
        });

        $('.table-up').click(function () {
            var $row = $(this).parents('tr');
            if ($row.index() === 1) return; // Don't go above the header
            $row.prev().before($row.get(0));
        });

        $('.table-down').click(function () {
            var $row = $(this).parents('tr');
            $row.next().after($row.get(0));
        });

        // A few jQuery helpers for exporting only
        jQuery.fn.pop = [].pop;
        jQuery.fn.shift = [].shift;

        $BTN.click(function () {
            var $rows = $TABLE.find('tr:not(:hidden)');
            var headers = [];
            var data = [];

            // Get the headers (add special header logic here)
            $($rows.shift()).find('th:not(:empty)').each(function () {
                headers.push($(this).text().toLowerCase());
            });

            // Turn all existing rows into a loopable array
            $rows.each(function () {
                var $td = $(this).find('td');
                var h = {};

                // Use the headers from earlier to name our hash keys
                headers.forEach(function (header, i) {
                    h[header] = $td.eq(i).text();
                });

                data.push(h);
            });

            // Output the result
            $EXPORT.text(JSON.stringify(data));
        });

         setCHeight(0.60,'hightable-containter');
    });

     document.addEventListener("DOMContentLoaded",
            function (event) {
                BookList.initialise('@Model.SortFilterPageData.FilterBy', '@Model.SortFilterPageData.FilterValue',
                    '@Url.Action("GetFilterSearchContent")');
        });



</script>

