
@{
    ViewData["Title"] = "CreatePunch";
    Layout = "~/Views/Shared/_SecureLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Create Punch</h3>
                <div class="box-tools">
                    <div class="pull-right">
                        <a class="modal-trigger waves-effect waves-light" data-toggle="modal" data-target="#modal1">
                            <img src="~/dist/img/excel.png" />
                        </a>
                    </div>
                </div>
            </div>

            <form asp-action="CreatePunch">
                <partial name="_ValidationSummary" />
                <div class="box-body style-10" id="container-punch" style="overflow-y:scroll">
                    <partial name="/Views/Shared/PartialViews/Punches/EditablePunchDetails.cshtml" model="Model" />
                </div>
                <div class="box-footer">
                    <a asp-action="PunchList"><p class="btn btn-warning pull-right">Back To List</p></a>
                    <button type="submit" class="btn btn-info pull-right" style="margin-right:5px">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Modal Structure -->
<div id="modal1" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <h4>Upload Excel</h4>
                <p>Upload the Excel file which contains the punch values.</p>
            </div>
            <div class="modal-body">
                <div>
                    <div class="box-body">
                        <div class="file-field input-field">
                            <div class="btn btn-default">
                                <span>File</span>
                                <input type="file" id="files">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-success" type="button" name="action" id="upload-file">
                    Upload
                    <i class="fa fa-send"></i>
                </button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
</div>

<environment names="Development">
    <script src="~/dist/js/api/activities/activityPunch.js"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/js/activityPunch.min.js"></script>
</environment>

<script type="text/javascript">

    $(document).ready(function () {

        var wh = window.innerHeight * 0.57;
        $('#container-punch').css('height', wh + 'px');
        $('input[type="checkbox"].flat-red, input[type="radio"].flat-red').iCheck({
            checkboxClass: 'icheckbox_flat-green',
            radioClass: 'iradio_flat-green'
        });

        $('.datepicker').datepicker({
            autoclose: true
        });

        activityPunch.getallPunches();
        activityPunch.getallPunchCategory();

        $("#activitySelect").select2({
            ajax: {
                url: "/poec/activity/ActivityListSummary",
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        search: params.term, // search term
                        page: params.page || 1,
                        pageSize: 500
                    };
                },
                processResults: function (data, params) {
                    // parse the results into the format expected by Select2
                    // since we are using custom formatting functions we do not need to
                    // alter the remote JSON data, except to indicate that infinite
                    // scrolling can be used
                    params.page = params.page || 1;

                    return {
                        results: data.items,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: true
            },
            placeholder: 'Search Task By Tag Number',
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            templateResult: formatRepo,
            templateSelection: formatRepoSelection
        });

        function formatRepo(repo) {
            if (repo.loading) {
                return repo.text;
            }

            var markup = "<div class='select2-result-repository clearfix'>" +
                "<div class='select2-result-repository__avatar'></div>" +
                "<div class='select2-result-repository__meta'>" +
                "<div class='select2-result-repository__title'>" + repo.activityCode + "</div>";

            markup += "<div class='select2-result-repository__statistics'>" +
                "<div class='select2-result-repository__forks'><i class='fa fa-flash'></i> " + repo.tagNumber + "</div>" +
                "</div>" +
                "</div></div>";

            return markup;
        }

        function formatRepoSelection(repo) {
            return repo.id;
        }

        $('#upload-file').on('click', function () {
            var formData = new FormData();
            formData.append('file', $('#files')[0].files[0]);
            $('#modal-default-overlay').modal('show');

            $.ajax({
                type: "Post",
                url: "/poec/ActivityPunch/UploadExcel",
                data: formData,
                processData: false,
                contentType: false,
                success: function (data, status, jqXHR) {
                    $('#modal-default-overlay').modal('toggle');
                    if (data.key == 200) {
                        $('#modal1').modal('toggle');
                        location.reload();
                    }
                    else {
                        $('#global-error-message').html(data.value);
                        $('#modal-danger').modal('show');
                    }
                },
                error: function (jqXHR, status) {
                    console.log(jqXHR);
                }
            });
        });
    });

</script>
